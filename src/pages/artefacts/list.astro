---
import EffectTooltip from "@components/EffectTooltip.astro";
import MarkdownContent from "@components/MarkdownContent.astro";
import MarkdownHighlight from "@components/MarkdownHighlight.astro";
import {
  ARTEFACTS_RARITY,
  ARTEFACTS_TAG,
  ARTEFACTS_TYPE,
} from "@data/artefacts";
import Layout from "@layouts/Layout.astro";
import { getCollection } from "astro:content";

const artefactEntries = await getCollection("artefacts");
---

<Layout title="Reverse 1999 Gnomon">
  <div class="text-sm breadcrumbs">
    <ul>
      <li><a href="/">Home</a></li>
      <li>Artefacts</li>
    </ul>
  </div>

  <h1>Artefact List</h1>

  <div x-data={"dataset"}>
    <div class="filters sticky top-16 bg-base-100 p-2 z-10">
      <div class="grid grid-cols-filter">
        <div class="py-2 px-4">Rarity</div>
        <ul class="py-2 px-4 flex gap-1">
          <template x-for="rarity in rarities">
            <li>
              <button
                class="btn btn-outline btn-xs"
                :class="rarity.code === rarityFilter ? 'btn-active' : ''"
                @click="filterRarity(rarity)"
                x-text="rarity.title"
              >
              </button>
            </li>
          </template>
        </ul>

        <div class="py-2 px-4">Type</div>
        <ul class="py-2 px-4 flex gap-1">
          <template x-for="type in types">
            <li>
              <button
                class="btn btn-outline btn-xs"
                :class="type.code === typeFilter ? 'btn-active' : ''"
                @click="filterType(type)"
                x-text="type.title"
              >
              </button>
            </li>
          </template>
        </ul>

        <div class="py-2 px-4">Tag</div>
        <ul class="py-2 px-4 flex gap-1">
          <template x-for="tag in tags">
            <li>
              <button
                class="btn btn-outline btn-xs"
                :class="tag.code === tagFilter ? 'btn-active' : ''"
                @click="filterTag(tag)"
                x-text="tag.title"
              >
              </button>
            </li>
          </template>
        </ul>
      </div>
    </div>

    <ul class="mt-8 flex flex-col gap-6">
      {
        artefactEntries.sort((a, b) => a.data.index - b.data.index).map(async (artefactEntry) => {
          const { Content } = await artefactEntry.render();

          return (
            <template
              x-if={`rarityFilter === 'ALL' || rarityFilter === '${artefactEntry.data.rarity}'`}
            >
              <template
                x-if={`typeFilter === 'ALL' || typeFilter === '${artefactEntry.data.type}'`}
              >
                <template
                  x-if={`tagFilter === 'ALL' || '${artefactEntry.data.tags.join("-")}'.includes(tagFilter)`}
                >
                  >
                  <li class="flex gap-4">
                    <div>
                      <h5 class="min-w-40">{artefactEntry.data.name}</h5>
                      <img
                        class="w-20 h-20"
                        src={`/data/rouge/artefacts/${artefactEntry.data.image}`}
                        alt={`artefact ${artefactEntry.slug}`}
                      />
                    </div>
                    <div>
                      <span
                        class:list={[
                          "badge font-bold",
                          {
                            "text-common border-common":
                              artefactEntry.data.rarity === "COMMON",
                            "text-rare border-rare":
                              artefactEntry.data.rarity === "RARE",
                            "text-epic border-epic":
                              artefactEntry.data.rarity === "EPIC",
                          },
                        ]}
                      >
                        {ARTEFACTS_RARITY[artefactEntry.data.rarity].title}
                      </span>
                      <span class="badge font-bold border-base-content">
                        {ARTEFACTS_TYPE[artefactEntry.data.type].title}
                      </span>
                      <div class="mt-1">
                        {artefactEntry.data.tags.map((tag) => (
                          <span
                            class:list={[
                              "badge font-bold",
                              {
                                "border-support text-support":
                                  tag === "SUPPORT",
                                "border-ritual text-ritual": tag === "RITUAL",
                                "border-craft text-craft": tag === "CRAFT",
                                "border-syntony text-syntony":
                                  tag === "SYNTONY",
                                "border-resonance text-resonance":
                                  tag === "RESONANCE",
                                "border-abundance text-abundance":
                                  tag === "ABUNDANCE",
                                "border-extra-action text-extra-action":
                                  tag === "EXTRA_ACTION",
                                "border-voltaic text-voltaic":
                                  tag === "VOLTAIC",
                              },
                            ]}
                          >
                            {ARTEFACTS_TAG[tag].title}
                          </span>
                        ))}
                      </div>
                      <div class="mt-2">
                        <Content
                          components={{
                            p: MarkdownContent,
                            strong: MarkdownHighlight,
                            effect: EffectTooltip,
                          }}
                        />
                      </div>
                    </div>
                  </li>
                </template>
              </template>
            </template>
          );
        })
      }
    </ul>
  </div>
</Layout>

<script>
  import {
    ARTEFACTS_RARITY,
    ARTEFACTS_TAG,
    ARTEFACTS_TYPE,
  } from "@data/artefacts";
  import Alpine from "alpinejs";

  window.Alpine = Alpine;

  Alpine.data("dataset", () => ({
    rarityFilter: "ALL",
    rarities: [
      { title: "All", code: "ALL" },
      ...Object.keys(ARTEFACTS_RARITY).map((code) => ({
        title: ARTEFACTS_RARITY[code].title,
        code,
      })),
    ],
    typeFilter: "ALL",
    types: [
      { title: "All", code: "ALL" },
      ...Object.keys(ARTEFACTS_TYPE).map((code) => ({
        title: ARTEFACTS_TYPE[code].title,
        code,
      })),
    ],
    tagFilter: "ALL",
    tags: [
      { title: "All", code: "ALL" },
      ...Object.keys(ARTEFACTS_TAG).map((code) => ({
        title: ARTEFACTS_TAG[code].title,
        code,
      })),
    ],

    initCharaters(artefactEntries) {
      this.artefacts = artefactEntries;
    },

    filterRarity(rarity) {
      this.rarityFilter = rarity.code;
    },

    filterType(type) {
      this.typeFilter = type.code;
    },

    filterTag(tag) {
      this.tagFilter = tag.code;
    },
  }));
</script>
