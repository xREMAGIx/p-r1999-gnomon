---
import EffectTooltip from "@components/EffectTooltip.astro";
import MarkdownContent from "@components/MarkdownContent.astro";
import MarkdownHighlight from "@components/MarkdownHighlight.astro";
import Layout from "@layouts/Layout.astro";
import { getCollection } from "astro:content";

const artefactEntries = await getCollection("artefacts");
---

<Layout title="Reverse 1999 Gnomon">
  <h1>Artefact List</h1>

  <div x-data={"dataset"}>
    <div class="filters">
      <div class="grid grid-cols-filter">
        <div class="py-2 px-4">Rarity</div>
        <ul class="py-2 px-4 flex gap-1">
          <template x-for="rarity in rarities">
            <li>
              <button
                class="btn btn-outline btn-xs"
                :class="rarity === rarityFilter ? 'btn-active' : ''"
                @click="filterRarity(rarity)"
                x-text="rarity"
              >
              </button>
            </li>
          </template>
        </ul>
      </div>
    </div>

    <ul class="grid gap-4">
      {
        artefactEntries.map(async (artefactEntry) => {
          const { Content } = await artefactEntry.render();

          return (
            <li class="grid grid-flow-col auto-cols-max gap-4">
              <h5 class="min-w-40">{artefactEntry.data.name}</h5>
              <Content
                components={{
                  p: MarkdownContent,
                  strong: MarkdownHighlight,
                  effect: EffectTooltip,
                }}
              />
            </li>
          );
        })
      }
    </ul>
  </div>
</Layout>

<script>
  import { ARTEFACTS_RARITY } from "@data/artefacts";
  import Alpine from "alpinejs";

  window.Alpine = Alpine;

  Alpine.data("dataset", () => ({
    rarityFilter: "all",
    rarities: ["all", ...Object.values(ARTEFACTS_RARITY)],

    artefactList: [],
    artefacts: [],

    initCharaters(artefactEntries) {
      this.artefacts = artefactEntries;
    },

    filterRarity(rarity) {
      this.rarityFilter = rarity;
      this.artefacts = this.artefactList.filter(
        (char) => this.rarityFilter === "all" || char.rare === rarity
      );
    },
  }));
</script>
